#include <iostream>
using namespace std;

int main (){
	long long int n=0; cin>>n;
	int k[10]={};	
	while (n){
		k[n%10]++;	//計算出從0~9的滿意度出現次數 
		 n=n/10;
	}	
	for (int i=19; i>0; i--){	//n只有19位數，所以滿意度出現最多也只有19次。由出現"最多"的開始印 
		for (int j=0; j<10; j++){
			if (k[j]==i) cout<<j<<" ";	//當滿意度"個數"=i時，就印出是"第幾個數j" 
		}		
	}
}

/*
1.這一版也修改過很多次，原本跟第一版一樣，想把滿意度0~9出現的次數由小排到大，但這樣還是會有問題！
2.因為如果次數相同時要從滿意度小的先印，如果用swap，最後的排列不一定是滿意度小的在前
3.如果用sort，會失去一開始k[i]的i的資料
4.後來想要由"次數最高"的開始印，印到次數=1的就停止。這樣就可以從k[i]陣列由左向右尋找
5.這樣的寫法不用再多寫一個idx陣列，也不用擔心n是幾位數！ 
